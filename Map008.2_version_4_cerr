/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var srtm = ee.Image("USGS/SRTMGL1_003"),
    bioms = ee.FeatureCollection("projects/mapbiomas-workspace/AUXILIAR/biomas-2019"),
    mapb_anual = ee.Image("projects/mapbiomas-workspace/public/collection5/mapbiomas_collection50_integration_v1"),
    col = ee.ImageCollection("projects/mapbiomas-workspace/TRANSVERSAIS/AGUA5-FT"),
    l5_col = ee.ImageCollection("LANDSAT/LT05/C01/T1_SR"),
    l7_col = ee.ImageCollection("LANDSAT/LE07/C01/T1_SR"),
    l8_col = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR"),
    geometry = /* color: #d63000 */ee.Geometry.MultiPoint(
        [[-2.3630708625462638, 51.38211947761918],
         [-2.5819936732892934, 51.45209525397808],
         [-0.04415187641429341, 51.568334661047324],
         [-0.1732412318830434, 51.52050729248574],
         [-0.08260402485179341, 51.47776179702945],
         [-3.5295644740705434, 50.71190955696247],
         [-1.1345449428205434, 52.63620178104665],
         [-0.9038320521955434, 52.220872799690824],
         [-2.2221914271955434, 52.19731002875133],
         [-2.2331777553205434, 51.86950967706478],
         [-1.6124502162580434, 54.971123841929334],
         [-2.323625657369024, 53.42563757455134],
         [-0.030519452023911597, 51.53809763012603]]),
    geometry2 = /* color: #02f3ff */ee.Geometry.MultiPoint(
        [[-1.5465322475080434, 53.81343619821111],
         [-1.7662588100080434, 53.65095959706132],
         [-0.3490224818830434, 53.76475914649078],
         [-0.2776113490705434, 53.78099110632086],
         [-2.5984342146009887, 53.394200912989014],
         [-2.6357901685311425, 53.54245003973492],
         [-1.5159230763413967, 53.68432947702077],
         [-1.3511281544663967, 53.72172507734128],
         [2.913731474086241, 42.7029371263112],
         [-2.737220598722334, 53.453436282932536]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var subbacias = ee.FeatureCollection('users/joaquimpereira/Bacias_Cerrado_ANA_nv2_diss');

var special1 = ee.List(['68', '69', '66', '67', '65']);
var special2 = ee.List(['44']);

var special1_col = ee.FeatureCollection(special1.map(function (nr) {
  return subbacias.filter(ee.Filter.eq('nunivotto2', ee.String(nr))).first().set('param', 0.03).set('freq', 4);
}));

var special2_col = ee.FeatureCollection(special2.map(function (nr) {
  return subbacias.filter(ee.Filter.eq('nunivotto2', ee.String(nr))).first().set('param', 0.06).set('freq', 4);
}));

var special = special1_col.merge(special2_col);
// print(special)

var param_img = special.reduceToImage(['param'], ee.Reducer.firstNonNull());

var notspecial = subbacias
  .filter(ee.Filter.neq('nunivotto2', 44))
  .filter(ee.Filter.neq('nunivotto2', 65))
  .filter(ee.Filter.neq('nunivotto2', 66))
  .filter(ee.Filter.neq('nunivotto2', 67))
  .filter(ee.Filter.neq('nunivotto2', 68))
  .filter(ee.Filter.neq('nunivotto2', 69))
  .map(function (f) {
    return f.set('param', 0.35).set('perc', 15);
  });

var biom_nr = 3;

var biom_name = [
  'NONE', 'AMAZONIA', 'CAATINGA', 'CERRADO', 'MATAATLANTICA', 'PAMPA', 'PANTANAL'
  ][biom_nr];
var biom = bioms.filter(ee.Filter.eq('CD_Bioma', biom_nr));


l7_col = l7_col.filterDate('1995-01-01', '2012-12-31');

var bandnamed = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2'];
var bands_l5 = ['B1', 'B2', 'B3', 'B4', 'B5', 'B7'];
var bands_l7 = ['B1', 'B2', 'B3', 'B4', 'B5', 'B7'];
var bands_l8 = ['B2', 'B3', 'B4', 'B5', 'B6', 'B7'];

var rename_bands = function (imgCol, input) {
  return imgCol.select(input, bandnamed);
};

var cloudScore = function (image) {

    var rescale = function (obj) {
    
        var image = obj.image.subtract(obj.min).divide(ee.Number(obj.max).subtract(obj.min));
    
        return image;
    };

    var cloudThresh = 10;

    // Compute several indicators of cloudiness and take the minimum of them.
    var score = ee.Image(1.0);

    // Clouds are reasonably bright in the blue band.
    score = score.min(rescale({
        'image': image.select(['blue']),
        'min': 1000,
        'max': 3000
    }));

    // Clouds are reasonably bright in all visible bands.
    score = score.min(rescale({
        'image': image.expression("b('red') + b('green') + b('blue')"),
        'min': 2000,
        'max': 8000
    }));

    // Clouds are reasonably bright in all infrared bands.
    score = score.min(rescale({
        'image': image.expression("b('nir') + b('swir1') + b('swir2')"),
        'min': 3000,
        'max': 8000
    }));

    // However, clouds are not snow.
    var ndsi = image.normalizedDifference(['green', 'swir1']);

    score = score.min(rescale({
        'image': ndsi,
        'min': 8000,
        'max': 6000
    })).multiply(100).byte();

    var cond = score.lt(cloudThresh);
    
    // var kernel = ee.Kernel.euclidean(2000, 'meters');
    
    // var proximity = cond.distance(kernel, false);
    
    // cond = cond.remap([0,1], [1,0]).where(proximity.gt(0), 0);
    
    return image.updateMask(cond);
};

var endmembers = [
    [119.0, 475.0, 169.0, 6250.0, 2399.0, 675.0], /*gv*/
    [1514.0, 1597.0, 1421.0, 3053.0, 7707.0, 1975.0], /*npv*/
    [1799.0, 2479.0, 3158.0, 5437.0, 7707.0, 6646.0], /*soil*/
    [4031.0, 8714.0, 7900.0, 8989.0, 7002.0, 6607.0] /*cloud*/
];

var sma = function (image) {
    
    var bands = ['blue','green','red','nir','swir1','swir2'];
    var outBandNames = ['gv', 'npv', 'soil', 'cloud'];
    
    var fractions = ee.Image(image)
                        .select(bands)
                        .unmix(endmembers); //, true, true

    fractions = fractions.rename(outBandNames);
    return image.addBands(fractions);
};

var l5_ready = rename_bands(l5_col, bands_l5).map(sma);
var l7_ready = rename_bands(l7_col, bands_l7).map(sma);
var l8_ready = rename_bands(l8_col, bands_l8).map(sma);

var processed_col = l5_ready.merge(l7_ready).merge(l8_ready).filter(ee.Filter.lte('CLOUD_COVER', 70));

var col_anual = col
  .filter(ee.Filter.eq('biome', biom_name))
  .filter(ee.Filter.eq('version', '3'))
  .filter(ee.Filter.eq('cadence', 'annual'));

var col_mensal = col
  .filter(ee.Filter.eq('biome', biom_name))
  .filter(ee.Filter.eq('version', '3'))
  .filter(ee.Filter.eq('cadence', 'monthly'));
  

var roads = ee.Image('users/cesargdiniz/osm_br_raster');
// Map.addLayer(roads, {palette: '808080'}, 'roads', false);

var bandnames_anual = ['classification'];
var bandnames_mensal = [
  'classification_1',
  'classification_2',
  'classification_3',
  'classification_4',
  'classification_5',
  'classification_6',
  'classification_7',
  'classification_8',
  'classification_9',
  'classification_10',
  'classification_11',
  'classification_12'
  ];

var doSoilMask = function (year, biom) {
  
  var soil_masking_special = function (image) {
    return image.addBands(image.select("soil").gt(10).where(image.select("soil").gt(param_img), 1).rename('soil_mask').selfMask());
  };
  
  var soil_masking_notspecial = function (image) {
    return image.addBands(image.select("soil").gt(10).where(image.select("soil").gt(0.3), 1).rename('soil_mask').selfMask());
  };  
  
  var start = ee.Date.fromYMD(year, 1, 1);
  var end = start.advance(1, 'year');
  
  var soil_freq_special = processed_col.filterDate(start, end).filterBounds(biom).map(cloudScore).map(soil_masking_special).sum().select('soil_mask');
  var soil_freq_notspecial = processed_col.filterDate(start, end).filterBounds(biom).map(cloudScore).map(soil_masking_notspecial).sum().select('soil_mask');
  var imgs_freq = processed_col.filterDate(start, end).filterBounds(biom).map(cloudScore).map(function (i) {return i.select('red').gt(-1)}).sum();
  
  var soil_perc = soil_freq_notspecial.divide(imgs_freq).unmask().multiply(100).round().selfMask();
  var soil_perc_mask = soil_perc.gte(15).selfMask().clip(notspecial);
  var soil_freq_mask = soil_freq_special.gte(4).selfMask().clip(special);

return soil_freq_mask.addBands(soil_perc_mask).reduce(ee.Reducer.max())
  .rename('soil_mask')
  .clip(biom);
};
// Map.addLayer(doSoilMask(1985, biom), {palette: 'red'}, 'soil_mask', false);
var corrigir = function (coll, cadence, year, biom) {

  // var soil_caat_year = soil_caat_col.filter(ee.Filter.eq('year', 1985)).sum().gte(1).selfMask();
  var soil_mask = doSoilMask(year, biom);

  var col_correct = coll.map(function (img) {
      
      var img_new = img
        .where(soil_mask.gt(0), 0)
        .where(roads.gt(0), 0)
        .selfMask()
        .clip(biom)
        .byte();
      
      return img_new.clip(biom)
        .set('year', ee.Number(year))
        .set('collection', 5)
        .set('biome', biom_name)
        .set('source', 'gtagua')
        .set('version', '4')
        .set('cadence', cadence);
    });
  
  return col_correct;
};

for (var year = 1986; year <= 2019; year++) {
  
  var col_anual_correct = corrigir(col_anual, 'anual', year, biom);
  var col_mensal_correct = corrigir(col_mensal, 'mensal', year, biom);

  var image_anual = col_anual_correct.filter(ee.Filter.eq('year', year)).first();
  // Map.addLayer(image_anual, {palette: '0000ff'}, 'anual ' + year);
  
  Export.image.toAsset({
    image: image_anual, 
    description: biom_name + '-' + year + '-4', 
    assetId: 'projects/mapbiomas-workspace/TRANSVERSAIS/AGUA5-FT/' + biom_name + '-' + year + '-4', 
    pyramidingPolicy: {
      'classification': 'mode'
    },
    region: biom.first().geometry().bounds(), 
    scale: 30, 
    maxPixels: 1e13
  });
  
  var image_mensal = col_mensal_correct.filter(ee.Filter.eq('year', year)).first();
  // print(image_mensal)
  // var blues = ['ffffff', '00ffff', '0000ff', '000040'];
  // Map.addLayer(image_mensal.reduce(ee.Reducer.sum()), {palette: blues, min:1, max:12}, 'mensal ' + year);
  
  Export.image.toAsset({
    image: image_mensal, 
    description: biom_name + '-' + year + '-4_mensal', 
    assetId: 'projects/mapbiomas-workspace/TRANSVERSAIS/AGUA5-FT/' + biom_name + '-' + year + '-4_mensal', 
    pyramidingPolicy: {
      'classification_1': 'mode',
      'classification_2': 'mode',
      'classification_3': 'mode',
      'classification_4': 'mode',
      'classification_5': 'mode',
      'classification_6': 'mode',
      'classification_7': 'mode',
      'classification_8': 'mode',
      'classification_9': 'mode',
      'classification_10': 'mode',
      'classification_11': 'mode',
      'classification_12': 'mode'
    },
    region: biom.first().geometry().bounds(), 
    scale: 30, 
    maxPixels: 1e13
  });  
  
}